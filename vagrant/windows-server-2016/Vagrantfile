# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|

  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    #vb.name = "windows-server-2016"
    # Customize the amount   config.vm.network "forwarded_port", guest: 3389, host: 3389
    #memory on the VM:
    vb.memory = 2048
  end

  config.vm.define "db" do |db|
    db.vm.guest = :windows
    db.vm.provider "virtualbox" do |dbp|
      dbp.memory = 3072
    end
    db.vm.communicator = "winrm"
    db.vm.boot_timeout = 600
    db.vm.graceful_halt_timeout = 600
    db.vm.box = "windows-server-2016-core"
    db.vm.box_url = "file:///c:\\code\\packer\\windows2016min-virtualbox.box"
    db.vm.hostname = "db"
    db.vm.network "forwarded_port", guest: 3389, host: 3390, id: 'rdp', auto_correct: true
    db.vm.network "forwarded_port", guest: 5985, host: 5590, id: "winrm", auto_correct: "true"
    db.vm.network "forwarded_port", guest: 80, host: 8080
    db.vm.network "private_network", ip: "192.168.10.10"
    db.winrm.username="vagrant"
    db.winrm.password="vagrant"
  end

  config.vm.define "app" do |app|
    app.vm.guest = :windows
    app.vm.provider "virtualbox" do |appp|
      appp.memory = 1048
    end
    app.vm.communicator = "winrm"
    app.vm.boot_timeout = 600
    app.vm.graceful_halt_timeout = 600
    app.vm.box = "windows-server-2016-core"
    app.vm.box_url = "file:///c:\\code\\packer\\windows2016min-virtualbox.box"
    app.vm.hostname = "app"
    app.vm.network "forwarded_port", guest: 3389, host: 3391, id: 'rdp', auto_correct: true
    app.vm.network "forwarded_port", guest: 5985, host: 5591, id: "winrm", auto_correct: "true"
    app.vm.network "forwarded_port", guest: 80, host: 8081
    app.vm.network "private_network", ip: "192.168.11.10"
    app.winrm.username="vagrant"
    app.winrm.password="vagrant"
  end

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port

  # Commented out because these forwarded ports are part of the vagrantfile packaged with the box
  # config.vm.network "forwarded_port", guest: 3389, host: 33389
  # config.vm.network "forwarded_port", guest: 5985, host: 55985, id: "winrm", auto_correct: "true"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #

  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    #Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
    #choco feature enable -n allowGlobalConfirmation
    #choco install puppet-agent
    add-windowsfeature -name web-server
    set-content -Value "<html><head></head><body><h1>Its me!</h1></body></html>" -Path "c:\\inetpub\\wwwroot\\index.html"
  SHELL
end
